--
--	Copyright (C) 2009-2010   Christian Jacobsen
--      Copyright (C) 2009-2010   Matt Jadud
--      Copyright (C)      2010   Michael Andrew Pirrone-Brusse
--      Copyright (C) 2009-2010   Adam Sampson
--
--	This library is free software; you can redistribute it and/or
--	modify it under the terms of the GNU Lesser General Public
--	License as published by the Free Software Foundation; either
--	version 2 of the License, or (at your option) any later version.
--
--	This library is distributed in the hope that it will be useful,
--	but WITHOUT ANY WARRANTY; without even the implied warranty of
--	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
--	Lesser General Public License for more details.
--
--      You should have received a copy of the GNU General Public License
--      along with this program.  If not, see <http://www.gnu.org/licenses/>.

--** ATmega328p specific interrupt code.
--
-- @module 328.external.interrups.module

#IF NOT (DEFINED (EXTERNAL.INTERRUPTS.MODULE))
#DEFINE EXTERNAL.INTERRUPTS.MODULE

--{{{ PROC set.interrups
--* Sets up the interrupt registers for the ATmega328.
--
-- [@code vintr] gets set in this process.
-- @param avr.pin The [@em AVR] pin being setup for interrupts.
-- @param vintr The interrupt vector associated with the given AVR pin.
PROC set.interrups (VAL INT avr.pin, RESULT INT vintr)
  PLACED [MAX.PORT]BYTE ports 0:
  #PRAGMA DEFINED ports
  #PRAGMA DEFINED vintr
  CASE avr.pin
    4
      SEQ
        vintr := VINTR.INT0
        ports[EICRA] := (ports[EICRA] /\ (~(3 << ISC00))) \/ (1 << ISC00)
        ports[EIMSK] := ports[EIMSK] \/ (BV (INT0))
    5
      SEQ
        vintr := VINTR.INT1
        ports[EICRA] := (ports[EICRA] /\ (~(3 << ISC10))) \/ (1 << ISC10)
        ports[EIMSK] := ports[EIMSK] \/ (BV (INT1))
    ELSE
      die ("pin does not support interrupts")
:
--}}}

#ENDIF
