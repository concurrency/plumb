--
--	Copyright (C) 2009-2010   Christian Jacobsen
--  Copyright (C) 2009-2010   Matt Jadud
--  Copyright (C)      2010   Michael Andrew Pirrone-Brusse
--  Copyright (C) 2009-2010   Adam Sampson
--
--	This library is free software; you can redistribute it and/or
--	modify it under the terms of the GNU Lesser General Public
--	License as published by the Free Software Foundation; either
--	version 2 of the License, or (at your option) any later version.
--
--	This library is distributed in the hope that it will be useful,
--	but WITHOUT ANY WARRANTY; without even the implied warranty of
--	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
--	Lesser General Public License for more details.
--
--      You should have received a copy of the GNU General Public License
--      along with this program.  If not, see <http://www.gnu.org/licenses/>.

--** Occam definitions for the ATmega644p.
--
-- @module 644.constants

#IF NOT (DEFINED (CONSTANTS.MODULE))
#DEFINE CONSTANTS.MODULE

--{{{  per-MCU configuration
#DEFINE AVR.ATMEGA644

#IF DEFINED (AVR.ATMEGA644)
#INCLUDE "iomxx4.inc"
#ENDIF
--}}}

--* The CPU frequency in Hz.
VAL INT32 F.CPU IS ##F.CPU:

--* A value that's guaranteed to be higher than the highest port value defined
-- by this module.
--
-- This is for placing an array over all the ports:
--
-- [@code
-- PLACED [MAX.PORT]BYTE ports 0:
--ports[PORTB] := 42
-- ]
VAL INT MAX.PORT IS #200:

--{{{  interrupt numbers
VAL INT VINTR.INT0          IS   0:  -- External Interrupt Request 0
VAL INT VINTR.INT1          IS   1:  --
VAL INT VINTR.PCINT0        IS   2:  -- Pin Change Interrupt Request 0
VAL INT VINTR.PCINT1        IS   3:  -- 
VAL INT VINTR.PCINT2        IS   4:  -- 
VAL INT VINTR.TIMER1        IS   5:
VAL INT VINTR.TIMER2        IS   6:
VAL INT VINTR.ADC           IS   7:  -- ADC Conversion Complete
VAL INT VINTR.USART.RX0     IS   8:  -- Rx Complete
VAL INT VINTR.USART.RX1     IS   9:  --
VAL INT VINTR.USART.UDRE0   IS  10:  -- Data Register Empty
VAL INT VINTR.USART.UDRE1   IS  11:  --
VAL INT VINTR.USART.TX0     IS  12:  -- Tx Complete
VAL INT VINTR.USART.TX1     IS  13:  --
VAL INT VINTR.TWI           IS  14:  -- Two-Wire Interface
--}}}

--{{{ serial constants
-- Because we are working with multiple serial ports, we place
--  all of the critical registers into arrays that can be indexed
--  by the serial port. 0, 1, 2, or 3
-- Baud Rate Registers (low/high bites)
VAL []INT UBRRL IS [UBRR0L, UBRR1L]:
VAL []INT UBRRH IS [UBRR0H, UBRR1H]:
-- UCSR -- Control and Status register
VAL []INT UCSRC IS [UCSR0C, UCSR1C]:
VAL []INT UCSRB IS [UCSR0B, UCSR1B]:
VAL []INT UCSRA IS [UCSR0A, UCSR1A]:

VAL []INT UDRE IS [UDRE0, UDRE1]:
VAL []INT UDR  IS [UDR0, UDR1]:

VAL []INT UDRIE IS [UDRIE0, UDRIE1]:
VAL []INT VINTR.UDRE IS [VINTR.USART.UDRE0, VINTR.USART.UDRE1]:

VAL []INT TXEN IS [TXEN0, TXEN1]:
VAL []INT RXEN IS [RXEN0, RXEN1]:

VAL []INT UCSZN0 IS [UCSZ00, UCSZ10]:
VAL []INT UCSZN1 IS [UCSZ01, UCSZ11]:

VAL []INT RXC IS [RXC0, RXC1]:
VAL []INT RXCIE IS [RXCIE0, RXCIE1]:
VAL []INT VINTR.RX IS [VINTR.USART.RX0, VINTR.USART.RX1]:
--}}}

#ENDIF
